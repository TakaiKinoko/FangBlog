{
  "expireTime": 9007200830738347000,
  "key": "transformer-remark-markdown-ast-b9fef072817b93c0933fad0bbbae0e2f-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-reading-time-",
  "val": {
    "type": "root",
    "children": [
      {
        "type": "paragraph",
        "children": [
          {
            "type": "text",
            "value": "There’s an intrinsic tradeoff in the use of device memories in CUDA: the global memory is large but slow, whereas the shared memory is small but fast. ",
            "position": {
              "start": { "line": 2, "column": 1, "offset": 1 },
              "end": { "line": 2, "column": 152, "offset": 152 },
              "indent": []
            }
          }
        ],
        "position": {
          "start": { "line": 2, "column": 1, "offset": 1 },
          "end": { "line": 2, "column": 152, "offset": 152 },
          "indent": []
        }
      },
      {
        "type": "paragraph",
        "children": [
          {
            "type": "text",
            "value": "A common strategy is to partition the data into subsets called tiles so that each tile fits into the shared memory. The term “tile” draws on the analogy that a large wall (i.e., the global memory data) can be covered by tiles (i.e., subsets that each can fit into the shared memory). An important criterion is that kernel computation on these tiles can be performed independently of each other. Note that not all data structures can be partitioned into tiles given an arbitrary kernel function.",
            "position": {
              "start": { "line": 4, "column": 1, "offset": 154 },
              "end": { "line": 4, "column": 495, "offset": 648 },
              "indent": []
            }
          }
        ],
        "position": {
          "start": { "line": 4, "column": 1, "offset": 154 },
          "end": { "line": 4, "column": 495, "offset": 648 },
          "indent": []
        }
      }
    ],
    "position": {
      "start": { "line": 1, "column": 1, "offset": 0 },
      "end": { "line": 4, "column": 495, "offset": 648 }
    }
  }
}
