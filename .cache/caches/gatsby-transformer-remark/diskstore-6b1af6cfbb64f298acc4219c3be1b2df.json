{
  "expireTime": 9007200830738572000,
  "key": "transformer-remark-markdown-ast-cc2822c28b7c1190f31baddf6fc6bc74-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-reading-time-",
  "val": {
    "type": "root",
    "children": [
      {
        "type": "paragraph",
        "children": [
          {
            "type": "text",
            "value": "There’s an intrinsic tradeoff in the use of device memories in CUDA: the ",
            "position": {
              "start": { "line": 2, "column": 1, "offset": 1 },
              "end": { "line": 2, "column": 74, "offset": 74 },
              "indent": []
            }
          },
          {
            "type": "strong",
            "children": [
              {
                "type": "text",
                "value": "global memory",
                "position": {
                  "start": { "line": 2, "column": 76, "offset": 76 },
                  "end": { "line": 2, "column": 89, "offset": 89 },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": { "line": 2, "column": 74, "offset": 74 },
              "end": { "line": 2, "column": 91, "offset": 91 },
              "indent": []
            }
          },
          {
            "type": "text",
            "value": " is large but slow, whereas the ",
            "position": {
              "start": { "line": 2, "column": 91, "offset": 91 },
              "end": { "line": 2, "column": 123, "offset": 123 },
              "indent": []
            }
          },
          {
            "type": "strong",
            "children": [
              {
                "type": "text",
                "value": "shared memory",
                "position": {
                  "start": { "line": 2, "column": 125, "offset": 125 },
                  "end": { "line": 2, "column": 138, "offset": 138 },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": { "line": 2, "column": 123, "offset": 123 },
              "end": { "line": 2, "column": 140, "offset": 140 },
              "indent": []
            }
          },
          {
            "type": "text",
            "value": " is small but fast.",
            "position": {
              "start": { "line": 2, "column": 140, "offset": 140 },
              "end": { "line": 2, "column": 159, "offset": 159 },
              "indent": []
            }
          }
        ],
        "position": {
          "start": { "line": 2, "column": 1, "offset": 1 },
          "end": { "line": 2, "column": 159, "offset": 159 },
          "indent": []
        }
      },
      {
        "type": "paragraph",
        "children": [
          {
            "type": "text",
            "value": "(To recap on the memory hierarchy: ",
            "position": {
              "start": { "line": 4, "column": 1, "offset": 161 },
              "end": { "line": 4, "column": 36, "offset": 196 },
              "indent": []
            }
          },
          {
            "type": "link",
            "title": null,
            "url": "/cuda1",
            "children": [
              {
                "type": "text",
                "value": "The CUDA Parallel Programming Model - 1. Concepts",
                "position": {
                  "start": { "line": 4, "column": 37, "offset": 197 },
                  "end": { "line": 4, "column": 86, "offset": 246 },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": { "line": 4, "column": 36, "offset": 196 },
              "end": { "line": 4, "column": 95, "offset": 255 },
              "indent": []
            }
          },
          {
            "type": "text",
            "value": ", on how to specify memories for variables: ",
            "position": {
              "start": { "line": 4, "column": 95, "offset": 255 },
              "end": { "line": 4, "column": 139, "offset": 299 },
              "indent": []
            }
          },
          {
            "type": "link",
            "title": null,
            "url": "/cudaProg2-Variables",
            "children": [
              {
                "type": "text",
                "value": "CUDA Programming - 2. CUDA Variable Type Qualifiers",
                "position": {
                  "start": { "line": 4, "column": 140, "offset": 300 },
                  "end": { "line": 4, "column": 191, "offset": 351 },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": { "line": 4, "column": 139, "offset": 299 },
              "end": { "line": 4, "column": 214, "offset": 374 },
              "indent": []
            }
          },
          {
            "type": "text",
            "value": ".)",
            "position": {
              "start": { "line": 4, "column": 214, "offset": 374 },
              "end": { "line": 4, "column": 216, "offset": 376 },
              "indent": []
            }
          }
        ],
        "position": {
          "start": { "line": 4, "column": 1, "offset": 161 },
          "end": { "line": 4, "column": 216, "offset": 376 },
          "indent": []
        }
      },
      {
        "type": "paragraph",
        "children": [
          {
            "type": "text",
            "value": "A common strategy is to partition the ",
            "position": {
              "start": { "line": 6, "column": 1, "offset": 378 },
              "end": { "line": 6, "column": 39, "offset": 416 },
              "indent": []
            }
          },
          {
            "type": "strong",
            "children": [
              {
                "type": "text",
                "value": "data",
                "position": {
                  "start": { "line": 6, "column": 41, "offset": 418 },
                  "end": { "line": 6, "column": 45, "offset": 422 },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": { "line": 6, "column": 39, "offset": 416 },
              "end": { "line": 6, "column": 47, "offset": 424 },
              "indent": []
            }
          },
          {
            "type": "text",
            "value": " into subsets called ",
            "position": {
              "start": { "line": 6, "column": 47, "offset": 424 },
              "end": { "line": 6, "column": 68, "offset": 445 },
              "indent": []
            }
          },
          {
            "type": "strong",
            "children": [
              {
                "type": "text",
                "value": "tiles",
                "position": {
                  "start": { "line": 6, "column": 70, "offset": 447 },
                  "end": { "line": 6, "column": 75, "offset": 452 },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": { "line": 6, "column": 68, "offset": 445 },
              "end": { "line": 6, "column": 77, "offset": 454 },
              "indent": []
            }
          },
          {
            "type": "text",
            "value": " so that ",
            "position": {
              "start": { "line": 6, "column": 77, "offset": 454 },
              "end": { "line": 6, "column": 86, "offset": 463 },
              "indent": []
            }
          },
          {
            "type": "strong",
            "children": [
              {
                "type": "text",
                "value": "each tile fits into the shared memory",
                "position": {
                  "start": { "line": 6, "column": 88, "offset": 465 },
                  "end": { "line": 6, "column": 125, "offset": 502 },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": { "line": 6, "column": 86, "offset": 463 },
              "end": { "line": 6, "column": 127, "offset": 504 },
              "indent": []
            }
          },
          {
            "type": "text",
            "value": ".",
            "position": {
              "start": { "line": 6, "column": 127, "offset": 504 },
              "end": { "line": 6, "column": 128, "offset": 505 },
              "indent": []
            }
          }
        ],
        "position": {
          "start": { "line": 6, "column": 1, "offset": 378 },
          "end": { "line": 6, "column": 128, "offset": 505 },
          "indent": []
        }
      },
      {
        "type": "paragraph",
        "children": [
          {
            "type": "text",
            "value": "The term “tile” draws on the analogy that a large wall (i.e., the global memory data) can be covered by tiles (i.e., subsets that each can fit into the shared memory). ",
            "position": {
              "start": { "line": 8, "column": 1, "offset": 507 },
              "end": { "line": 8, "column": 169, "offset": 675 },
              "indent": []
            }
          }
        ],
        "position": {
          "start": { "line": 8, "column": 1, "offset": 507 },
          "end": { "line": 8, "column": 169, "offset": 675 },
          "indent": []
        }
      },
      {
        "type": "paragraph",
        "children": [
          {
            "type": "text",
            "value": "An important criterion is that kernel computation on these tiles can be performed independently of each other. Note that not all data structures can be partitioned into tiles given an arbitrary kernel function.",
            "position": {
              "start": { "line": 10, "column": 1, "offset": 677 },
              "end": { "line": 10, "column": 211, "offset": 887 },
              "indent": []
            }
          }
        ],
        "position": {
          "start": { "line": 10, "column": 1, "offset": 677 },
          "end": { "line": 10, "column": 211, "offset": 887 },
          "indent": []
        }
      }
    ],
    "position": {
      "start": { "line": 1, "column": 1, "offset": 0 },
      "end": { "line": 10, "column": 211, "offset": 887 }
    }
  }
}
