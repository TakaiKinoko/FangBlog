{
  "expireTime": 9007200830647108000,
  "key": "transformer-remark-markdown-html-d928bf99bb001f02f80ac087b9da688a-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-reading-time-",
  "val": "<p>In the last post, we saw how full concurrency can be achieved amongst streams. Here Iâ€™d like to talk about how CUDA operations from different streams may also be <strong>interleaved</strong>, which is another programming model often used to effect concurrency.</p>\n<h3>Review CUDA Asynchronous Commands</h3>\n<p>Being asynchronous means that CUDA can perform these operations simultaneously</p>\n<ul>\n<li>\n<p>CUDA Kernel &#x3C;&#x3C;&#x3C;>>></p>\n</li>\n<li>\n<p>cudaMemcpyAsync (HostToDevice)</p>\n</li>\n<li>\n<p>cudaMemcpyAsync (DeviceToHost)</p>\n</li>\n<li>\n<p>Operations on the CPU</p>\n</li>\n</ul>\n<h3>What Can Happen Simultaneously</h3>\n<ul>\n<li>\n<p>lots of CUDA kernels on GPU</p>\n</li>\n<li>\n<p><code class=\"language-text\">cudaMemcpyAsyncs</code> both HostToDevice and DeviceToHost</p>\n</li>\n<li>\n<p>computation on the CPU</p>\n</li>\n</ul>"
}
