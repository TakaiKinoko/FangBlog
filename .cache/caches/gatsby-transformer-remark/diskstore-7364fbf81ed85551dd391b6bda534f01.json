{
  "expireTime": 9007200830670725000,
  "key": "transformer-remark-markdown-ast-b7fefff36d4485200419f52183c70328-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-reading-time-",
  "val": {
    "type": "root",
    "children": [
      {
        "type": "paragraph",
        "children": [
          {
            "type": "text",
            "value": "This is the fourth post in a series about what I learnt in my GPU class at NYU this past fall. Here I collected several examples that showcase how the CUDA ",
            "position": {
              "start": { "line": 2, "column": 1, "offset": 1 },
              "end": { "line": 2, "column": 157, "offset": 157 },
              "indent": []
            }
          },
          {
            "type": "html",
            "value": "<code class=\"language-text\">__syncthreads()</code>",
            "position": {
              "start": { "line": 2, "column": 157, "offset": 157 },
              "end": { "line": 2, "column": 174, "offset": 174 },
              "indent": []
            }
          },
          {
            "type": "text",
            "value": " command should (or should not) be used.",
            "position": {
              "start": { "line": 2, "column": 174, "offset": 174 },
              "end": { "line": 2, "column": 214, "offset": 214 },
              "indent": []
            }
          }
        ],
        "position": {
          "start": { "line": 2, "column": 1, "offset": 1 },
          "end": { "line": 2, "column": 214, "offset": 214 },
          "indent": []
        }
      },
      {
        "type": "heading",
        "depth": 3,
        "children": [
          {
            "type": "text",
            "value": "Some Notes On Synchronization",
            "position": {
              "start": { "line": 4, "column": 5, "offset": 220 },
              "end": { "line": 4, "column": 34, "offset": 249 },
              "indent": []
            }
          }
        ],
        "position": {
          "start": { "line": 4, "column": 1, "offset": 216 },
          "end": { "line": 4, "column": 34, "offset": 249 },
          "indent": []
        }
      },
      {
        "type": "paragraph",
        "children": [
          {
            "type": "text",
            "value": "To coordinate the execution of multiple threads, CUDA allows threads in the same block to coordinate their activities by using a barrier ",
            "position": {
              "start": { "line": 6, "column": 1, "offset": 251 },
              "end": { "line": 6, "column": 138, "offset": 388 },
              "indent": []
            }
          }
        ],
        "position": {
          "start": { "line": 6, "column": 1, "offset": 251 },
          "end": { "line": 6, "column": 138, "offset": 388 },
          "indent": []
        }
      },
      {
        "type": "list",
        "ordered": false,
        "start": null,
        "spread": true,
        "children": [
          {
            "type": "listItem",
            "spread": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "html",
                    "value": "<code class=\"language-text\">__syncthreads()</code>",
                    "position": {
                      "start": { "line": 8, "column": 3, "offset": 392 },
                      "end": { "line": 8, "column": 20, "offset": 409 },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " is called by a kernel function",
                    "position": {
                      "start": { "line": 8, "column": 20, "offset": 409 },
                      "end": { "line": 8, "column": 51, "offset": 440 },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": { "line": 8, "column": 3, "offset": 392 },
                  "end": { "line": 8, "column": 51, "offset": 440 },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": { "line": 8, "column": 1, "offset": 390 },
              "end": { "line": 9, "column": 1, "offset": 441 },
              "indent": [1]
            }
          },
          {
            "type": "listItem",
            "spread": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "The thread that makes the call will be held at the calling location until ",
                    "position": {
                      "start": { "line": 10, "column": 3, "offset": 444 },
                      "end": { "line": 10, "column": 77, "offset": 518 },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "every thread in the block",
                        "position": {
                          "start": { "line": 10, "column": 79, "offset": 520 },
                          "end": { "line": 10, "column": 104, "offset": 545 },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": { "line": 10, "column": 77, "offset": 518 },
                      "end": { "line": 10, "column": 106, "offset": 547 },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " reaches the location",
                    "position": {
                      "start": { "line": 10, "column": 106, "offset": 547 },
                      "end": { "line": 10, "column": 127, "offset": 568 },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": { "line": 10, "column": 3, "offset": 444 },
                  "end": { "line": 10, "column": 127, "offset": 568 },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": { "line": 10, "column": 1, "offset": 442 },
              "end": { "line": 11, "column": 1, "offset": 569 },
              "indent": [1]
            }
          },
          {
            "type": "listItem",
            "spread": false,
            "checked": null,
            "children": [
              {
                "type": "paragraph",
                "children": [
                  {
                    "type": "text",
                    "value": "Threads in different blocks ",
                    "position": {
                      "start": { "line": 12, "column": 3, "offset": 572 },
                      "end": { "line": 12, "column": 31, "offset": 600 },
                      "indent": []
                    }
                  },
                  {
                    "type": "strong",
                    "children": [
                      {
                        "type": "text",
                        "value": "cannot",
                        "position": {
                          "start": { "line": 12, "column": 33, "offset": 602 },
                          "end": { "line": 12, "column": 39, "offset": 608 },
                          "indent": []
                        }
                      }
                    ],
                    "position": {
                      "start": { "line": 12, "column": 31, "offset": 600 },
                      "end": { "line": 12, "column": 41, "offset": 610 },
                      "indent": []
                    }
                  },
                  {
                    "type": "text",
                    "value": " synchronize! CUDA runtime system can execute blocks in any order.",
                    "position": {
                      "start": { "line": 12, "column": 41, "offset": 610 },
                      "end": { "line": 12, "column": 107, "offset": 676 },
                      "indent": []
                    }
                  }
                ],
                "position": {
                  "start": { "line": 12, "column": 3, "offset": 572 },
                  "end": { "line": 12, "column": 107, "offset": 676 },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": { "line": 12, "column": 1, "offset": 570 },
              "end": { "line": 12, "column": 107, "offset": 676 },
              "indent": []
            }
          }
        ],
        "position": {
          "start": { "line": 8, "column": 1, "offset": 390 },
          "end": { "line": 12, "column": 107, "offset": 676 },
          "indent": [1, 1, 1, 1]
        }
      },
      {
        "type": "heading",
        "depth": 2,
        "children": [
          {
            "type": "text",
            "value": "Example 1",
            "position": {
              "start": { "line": 14, "column": 4, "offset": 681 },
              "end": { "line": 14, "column": 13, "offset": 690 },
              "indent": []
            }
          }
        ],
        "position": {
          "start": { "line": 14, "column": 1, "offset": 678 },
          "end": { "line": 14, "column": 13, "offset": 690 },
          "indent": []
        }
      },
      {
        "type": "html",
        "lang": "c",
        "meta": null,
        "value": "<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">__shared__ <span class=\"token keyword\">float</span> partialSum<span class=\"token punctuation\">[</span>SIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\npartialSum<span class=\"token punctuation\">[</span>threadIdx<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> X<span class=\"token punctuation\">[</span>blockIdx<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> blockDim<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> threadIdx<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> t <span class=\"token operator\">=</span> threadIdx<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> stride <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> stride <span class=\"token operator\">&lt;</span> blockDim<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span> stride <span class=\"token operator\">*=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n     <span class=\"token function\">__syncthreads</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>stride<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n          partialSum<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> partialSum<span class=\"token punctuation\">[</span>t<span class=\"token operator\">+</span>stride<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>",
        "position": {
          "start": { "line": 16, "column": 1, "offset": 692 },
          "end": { "line": 25, "column": 4, "offset": 999 },
          "indent": [1, 1, 1, 1, 1, 1, 1, 1, 1]
        }
      },
      {
        "type": "paragraph",
        "children": [
          {
            "type": "text",
            "value": "The ",
            "position": {
              "start": { "line": 27, "column": 1, "offset": 1001 },
              "end": { "line": 27, "column": 5, "offset": 1005 },
              "indent": []
            }
          },
          {
            "type": "html",
            "value": "<code class=\"language-text\">__syncthreads()</code>",
            "position": {
              "start": { "line": 27, "column": 5, "offset": 1005 },
              "end": { "line": 27, "column": 22, "offset": 1022 },
              "indent": []
            }
          },
          {
            "type": "text",
            "value": " statement in the for-loop ensures that all partial sums for the previous iteration have been generated and before any one of the threads is allowed to begin the current iteration. This way, all threads that enter the second iteration will be using the values produced in the first iteration.",
            "position": {
              "start": { "line": 27, "column": 22, "offset": 1022 },
              "end": { "line": 27, "column": 314, "offset": 1314 },
              "indent": []
            }
          }
        ],
        "position": {
          "start": { "line": 27, "column": 1, "offset": 1001 },
          "end": { "line": 27, "column": 314, "offset": 1314 },
          "indent": []
        }
      },
      {
        "type": "heading",
        "depth": 2,
        "children": [
          {
            "type": "text",
            "value": "Example 2",
            "position": {
              "start": { "line": 29, "column": 4, "offset": 1319 },
              "end": { "line": 29, "column": 13, "offset": 1328 },
              "indent": []
            }
          }
        ],
        "position": {
          "start": { "line": 29, "column": 1, "offset": 1316 },
          "end": { "line": 29, "column": 13, "offset": 1328 },
          "indent": []
        }
      },
      {
        "type": "paragraph",
        "children": [
          {
            "type": "text",
            "value": "How to sync threads when there’s ",
            "position": {
              "start": { "line": 31, "column": 1, "offset": 1330 },
              "end": { "line": 31, "column": 34, "offset": 1363 },
              "indent": []
            }
          },
          {
            "type": "strong",
            "children": [
              {
                "type": "text",
                "value": "thread divergence",
                "position": {
                  "start": { "line": 31, "column": 36, "offset": 1365 },
                  "end": { "line": 31, "column": 53, "offset": 1382 },
                  "indent": []
                }
              }
            ],
            "position": {
              "start": { "line": 31, "column": 34, "offset": 1363 },
              "end": { "line": 31, "column": 55, "offset": 1384 },
              "indent": []
            }
          },
          {
            "type": "text",
            "value": "?",
            "position": {
              "start": { "line": 31, "column": 55, "offset": 1384 },
              "end": { "line": 31, "column": 56, "offset": 1385 },
              "indent": []
            }
          }
        ],
        "position": {
          "start": { "line": 31, "column": 1, "offset": 1330 },
          "end": { "line": 31, "column": 56, "offset": 1385 },
          "indent": []
        }
      },
      {
        "type": "paragraph",
        "children": [
          {
            "type": "text",
            "value": "The code below is problematic because some threads will be stuck in the ",
            "position": {
              "start": { "line": 33, "column": 1, "offset": 1387 },
              "end": { "line": 33, "column": 73, "offset": 1459 },
              "indent": []
            }
          },
          {
            "type": "html",
            "value": "<code class=\"language-text\">if</code>",
            "position": {
              "start": { "line": 33, "column": 73, "offset": 1459 },
              "end": { "line": 33, "column": 77, "offset": 1463 },
              "indent": []
            }
          },
          {
            "type": "text",
            "value": " branch whereas others in the ",
            "position": {
              "start": { "line": 33, "column": 77, "offset": 1463 },
              "end": { "line": 33, "column": 107, "offset": 1493 },
              "indent": []
            }
          },
          {
            "type": "html",
            "value": "<code class=\"language-text\">else</code>",
            "position": {
              "start": { "line": 33, "column": 107, "offset": 1493 },
              "end": { "line": 33, "column": 113, "offset": 1499 },
              "indent": []
            }
          },
          {
            "type": "text",
            "value": " branch — deadlock!",
            "position": {
              "start": { "line": 33, "column": 113, "offset": 1499 },
              "end": { "line": 33, "column": 133, "offset": 1519 },
              "indent": []
            }
          }
        ],
        "position": {
          "start": { "line": 33, "column": 1, "offset": 1387 },
          "end": { "line": 33, "column": 133, "offset": 1519 },
          "indent": []
        }
      },
      {
        "type": "html",
        "lang": "c",
        "meta": null,
        "value": "<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">{</span>\n     <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n     <span class=\"token function\">__syncthreads</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n     <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n     <span class=\"token function\">__syncthreads</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>",
        "position": {
          "start": { "line": 35, "column": 1, "offset": 1521 },
          "end": { "line": 43, "column": 4, "offset": 1604 },
          "indent": [1, 1, 1, 1, 1, 1, 1, 1]
        }
      },
      {
        "type": "paragraph",
        "children": [
          {
            "type": "text",
            "value": "To fix it is simple:",
            "position": {
              "start": { "line": 45, "column": 1, "offset": 1606 },
              "end": { "line": 45, "column": 21, "offset": 1626 },
              "indent": []
            }
          }
        ],
        "position": {
          "start": { "line": 45, "column": 1, "offset": 1606 },
          "end": { "line": 45, "column": 21, "offset": 1626 },
          "indent": []
        }
      },
      {
        "type": "html",
        "lang": "c",
        "meta": null,
        "value": "<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">{</span>\n     <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n     <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">__syncthreads</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>",
        "position": {
          "start": { "line": 47, "column": 1, "offset": 1628 },
          "end": { "line": 54, "column": 4, "offset": 1684 },
          "indent": [1, 1, 1, 1, 1, 1, 1]
        }
      }
    ],
    "position": {
      "start": { "line": 1, "column": 1, "offset": 0 },
      "end": { "line": 55, "column": 1, "offset": 1685 }
    }
  }
}
