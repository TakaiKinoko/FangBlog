{
  "expireTime": 9007200830836366000,
  "key": "transformer-remark-markdown-html-ast-ebf007e81ad5a881c87b75b70c896c55-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-reading-time-",
  "val": {
    "type": "root",
    "children": [
      {
        "type": "element",
        "tagName": "p",
        "properties": {},
        "children": [
          {
            "type": "text",
            "value": "In the fifth post of the CUDA series (",
            "position": {
              "start": { "line": 2, "column": 1, "offset": 1 },
              "end": { "line": 2, "column": 39, "offset": 39 }
            }
          },
          {
            "type": "element",
            "tagName": "a",
            "properties": { "href": "/cuda5-coalesce" },
            "children": [
              {
                "type": "text",
                "value": "The CUDA Parallel Programming Model - 5. Memory Coalescing",
                "position": {
                  "start": { "line": 2, "column": 40, "offset": 40 },
                  "end": { "line": 2, "column": 98, "offset": 98 }
                }
              }
            ],
            "position": {
              "start": { "line": 2, "column": 39, "offset": 39 },
              "end": { "line": 2, "column": 116, "offset": 116 }
            }
          },
          {
            "type": "text",
            "value": "), I put up a note on the effect of memory alignment on memory coalesce. Here I feel necessary to add a little bit more. ",
            "position": {
              "start": { "line": 2, "column": 116, "offset": 116 },
              "end": { "line": 2, "column": 237, "offset": 237 }
            }
          }
        ],
        "position": {
          "start": { "line": 2, "column": 1, "offset": 1 },
          "end": { "line": 2, "column": 237, "offset": 237 }
        }
      },
      { "type": "text", "value": "\n" },
      {
        "type": "element",
        "tagName": "p",
        "properties": {},
        "children": [
          {
            "type": "text",
            "value": "Memory access on the GPU works much better if the data items are aligned. Hence, allocating 2D or 3D arrays so that every row starts at a 64-byte or 128-byte boundary address will imporve performance. However, this is hard to do for programmers.",
            "position": {
              "start": { "line": 4, "column": 1, "offset": 239 },
              "end": { "line": 4, "column": 246, "offset": 484 }
            }
          }
        ],
        "position": {
          "start": { "line": 4, "column": 1, "offset": 239 },
          "end": { "line": 4, "column": 246, "offset": 484 }
        }
      },
      { "type": "text", "value": "\n" },
      {
        "type": "element",
        "tagName": "p",
        "properties": {},
        "children": [
          {
            "type": "text",
            "value": "Donâ€™t worry, CUDA offers special memory operaions",
            "position": {
              "start": { "line": 6, "column": 1, "offset": 486 },
              "end": { "line": 6, "column": 50, "offset": 535 }
            }
          }
        ],
        "position": {
          "start": { "line": 6, "column": 1, "offset": 486 },
          "end": { "line": 6, "column": 50, "offset": 535 }
        }
      }
    ],
    "position": {
      "start": { "line": 1, "column": 1, "offset": 0 },
      "end": { "line": 8, "column": 1, "offset": 537 }
    }
  }
}
